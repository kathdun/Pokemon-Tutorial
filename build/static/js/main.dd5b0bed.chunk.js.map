{"version":3,"sources":["models/mock-pokemon.ts","helpers/format-type.ts","helpers/format-date.ts","pages/pokemon-detail.tsx","components/pokemon-card.tsx","pages/pokemon-list.tsx","App.tsx","index.tsx"],"names":["POKEMONS","id","name","hp","cp","picture","types","created","Date","formatType","type","color","formatDate","date","getDate","getMonth","getFullYear","PokemonsDetail","match","useState","pokemon","setPokemon","useEffect","forEach","params","toString","className","src","alt","style","width","margin","map","key","alert","to","PokremonCard","borderColor","setColor","history","useHistory","onClick","push","onMouseEnter","onMouseLeave","PokemonList","pokemons","setPokemons","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd5b0bed.chunk.js","sourcesContent":["import Pokemon from './pokemon';\r\n  \r\nexport const POKEMONS: Pokemon[] = [\r\n {\r\n  id: 1,\r\n  name: \"Bulbizarre\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"./images/001.png\",\r\n  types: [\"Plante\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 2,\r\n  name: \"Salamèche\",\r\n  hp: 28,\r\n  cp: 6,\r\n  picture: \"./images/002.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 3,\r\n  name: \"Carapuce\",\r\n  hp: 21,\r\n  cp: 4,\r\n  picture: \"./images/003.png\",\r\n  types: [\"Eau\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 4,\r\n  name: \"Aspicot\",\r\n  hp: 16,\r\n  cp: 2,\r\n  picture: \"./images/004.png\",\r\n  types: [\"Insecte\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 5,\r\n  name: \"Roucool\",\r\n  hp: 30,\r\n  cp: 7,\r\n  picture: \"./images/005.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 6,\r\n  name: \"Rattata\",\r\n  hp: 18,\r\n  cp: 6,\r\n  picture: \"./images/006.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 7,\r\n  name: \"Piafabec\",\r\n  hp: 14,\r\n  cp: 5,\r\n  picture: \"./images/007.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 8,\r\n  name: \"Abo\",\r\n  hp: 16,\r\n  cp: 4,\r\n  picture: \"./images/008.png\",\r\n  types: [\"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 9,\r\n  name: \"Pikachu\",\r\n  hp: 21,\r\n  cp: 7,\r\n  picture: \"./images/009.png\",\r\n  types: [\"Electrik\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 10,\r\n  name: \"Sabelette\",\r\n  hp: 19,\r\n  cp: 3,\r\n  picture: \"./images/010.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 11,\r\n  name: \"Mélofée\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"./images/012.png\",\r\n  types: [\"Fée\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 12,\r\n  name: \"Groupix\",\r\n  hp: 17,\r\n  cp: 8,\r\n  picture: \"./images/014.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n }\r\n];\r\n \r\nexport default POKEMONS;","\r\n  const formatType = (type: string): string => {\r\n    let color: string;\r\n    switch (type) {\r\n    case 'Feu':\r\n        color = 'red lighten-1';\r\n    break;\r\n    case 'Eau':\r\n        color = 'blue lighten-1';\r\n    break;\r\n    case 'Plante':\r\n        color = 'green lighten-1';\r\n    break;\r\n    case 'Insecte':\r\n        color = 'brown lighten-1';\r\n    break;\r\n    case 'Normal':\r\n        color = 'grey lighten-3';\r\n    break;\r\n    case 'Vol':\r\n        color = 'blue lighten-3';\r\n    break;\r\n    case 'Poison':\r\n        color = 'deep-purple accent-1';\r\n    break;\r\n    case 'Fée':\r\n        color = 'pink lighten-4';\r\n    break;\r\n    case 'Psy':\r\n        color = 'deep-purple darken-2';\r\n    break;\r\n    case 'Electrik':\r\n        color = 'lime accent-1';\r\n    break;\r\n    case 'Combat':\r\n        color = 'deep-orange';\r\n    break;\r\n    default:\r\n        color = 'grey';\r\n    break;\r\n    }\r\n     return `chip ${color}`;\r\n}\r\n\r\nexport default formatType;","const formatDate=(date:Date):string=>{\r\n    return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\r\n}\r\nexport default formatDate;\r\n","import React, { FunctionComponent, useState, useEffect } from 'react'\r\nimport { RouteComponentProps, Link } from 'react-router-dom'\r\nimport Pokemon from '../models/pokemon';\r\nimport POKEMONS from '../models/mock-pokemon';\r\nimport formatType from '../helpers/format-type';\r\nimport formatDate from '../helpers/format-date';\r\n\r\ntype Params = { id: string };\r\n\r\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>>=({match})=>{\r\n const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n    useEffect(() => {\r\n        POKEMONS.forEach(pokemon => {\r\n            if (match.params.id === pokemon.id.toString()) {\r\n                setPokemon(pokemon);\r\n            }\r\n        })\r\n    }, [match.params.id]);\r\n    \r\n    return (\r\n        <div>\r\n        { pokemon ? \r\n            (\r\n               \r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m8 offset-m2\">\r\n                        <h2 className=\"header center\">{ pokemon.name }</h2>\r\n                        <div className=\"card hoverable\">\r\n                            <div className=\"card-image\">\r\n                            <img src={pokemon.picture} alt={pokemon.name} style={{width:'250px',margin:'0 auto'}}/>\r\n                            </div>\r\n                            <div className=\"card-stacked\">\r\n                                <div className=\"card-content\">\r\n                                    <table className=\"bordered striped\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Nom</td>\r\n                                                <td><strong>{ pokemon.name }</strong></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Points de vie</td>\r\n                                                <td><strong>{ pokemon.hp }</strong></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Dégâts</td>\r\n                                                <td><strong>{ pokemon.cp }</strong></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Types</td>\r\n                                                <td>\r\n                                                    {pokemon.types.map(type => (\r\n                                                        <span key={type} className={formatType(type)}>{type}</span>\r\n                                                    ))}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Date de création</td>\r\n                                                <td>{formatDate(pokemon.created)}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                        {alert(pokemon.picture)}\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"card-action\">\r\n                                    <Link to=\"/\">Retour</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) \r\n        : (\r\n            <h4 className=\"center\">Aucun pokémon à afficher !</h4>\r\n        )}\r\n    </div>\r\n    );\r\n} \r\n\r\nexport default PokemonsDetail;","import React,{ FunctionComponent,useState} from 'react'\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport Pokemon from \"../models/pokemon\";\r\nimport  './pokemon-card.css';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\ntype Props ={\r\n    pokemon: Pokemon,\r\n    borderColor?: string,\r\n     \r\n};\r\n\r\nconst PokremonCard: FunctionComponent<Props>=({pokemon,borderColor='#009688'}) =>{\r\n  const [color,setColor] =useState<string>();\r\n  const history=useHistory();\r\n  const showBorder=()=>{\r\n      setColor(borderColor);\r\n  }\r\n  \r\n  const hideBorder=() =>{\r\n      setColor('#f5f5f5');\r\n  }\r\n\r\nconst goToPokemon=(id:number)=>{\r\n    history.push(`/pokemons/${id}`);\r\n}\r\n\r\n    return(\r\n        <div className=\"col s6 m4\" onClick={()=>goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}> \r\n            <div className=\"card horizontal\" style={{borderColor: color}}>\r\n                <div className=\"card-image\">\r\n                    <img src={pokemon.picture} alt={pokemon.name} />\r\n                </div>\r\n                <div className=\"card-stacked\">\r\n                    <div className=\"card-content\">\r\n                        <p>{pokemon.name}</p>\r\n                        <p>{formatDate(pokemon.created)}</p>\r\n                        {pokemon.types.map(type => (\r\n                            <span key={type} className={formatType(type)}>{type}</span>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokremonCard;","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport Pokemon from '../models/pokemon';\r\nimport POKEMONS from '../models/mock-pokemon';\r\nimport PokemonCard from '../components/pokemon-card';\r\n\r\nconst PokemonList: FunctionComponent = () => {\r\nconst [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\nuseEffect(() => {\r\n    setPokemons(POKEMONS);\r\n    }, []);\r\n\r\nreturn (\r\n<div>\r\n    <h1 className=\"center\">Pokédex</h1>\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            {pokemons.map(pokemon => (\r\n            <PokemonCard key={pokemon.id} pokemon={pokemon}/>\r\n        ))}\r\n        </div>\r\n    </div>\r\n</div>\r\n);\r\n}\r\nexport default PokemonList;","import React,{FunctionComponent} from 'react';\r\nimport { Link, Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport PokemonsDetail from './pages/pokemon-detail';\r\nimport PokemonList from './pages/pokemon-list';\r\n\r\nconst App: FunctionComponent = () => {\r\n \r\n return (\r\n   <Router>\r\n      <div>\r\n         {/*Barre de navigation comun a toutes les pages */}\r\n            <nav className=\"nav-wrapper teal\">\r\n               <div>\r\n                  <Link to=\"/\" className=\"brand-logo center\">Pokedex</Link>\r\n               </div>\r\n            </nav>\r\n         {/*Systeme de gestion des routes de l'application*/}\r\n         <Switch>\r\n            <Route exact path=\"/\" component={PokemonList}/>\r\n            <Route exact path=\"/pokemons\" component={PokemonList}/>\r\n            <Route path=\"/pokemons/:id\" component={PokemonsDetail}/>\r\n         </Switch>\r\n      </div>\r\n   </Router>\r\n )\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}